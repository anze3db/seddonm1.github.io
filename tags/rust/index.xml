<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on reorchestrate</title><link>https://reorchestrate.com/tags/rust/</link><description>Recent content in Rust on reorchestrate</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 16 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://reorchestrate.com/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>SQLite Transactions</title><link>https://reorchestrate.com/posts/sqlite-transactions/</link><pubDate>Tue, 16 Jul 2024 00:00:00 +0000</pubDate><guid>https://reorchestrate.com/posts/sqlite-transactions/</guid><description>What is SQLite? In the past few years SQLite (not SQL-light) has had a surge of popularity as people have come to realise its power as an in-process, highly reliable SQL database engine as a backend for server processes rather than its traditional role of client or edge applications. This change in stance for SQLite has happened despite the authors almost actively discouraging its use for this purpose.
I am interested in SQLite for some key reasons:</description></item><item><title>Plugins for Rust</title><link>https://reorchestrate.com/posts/plugins-for-rust/</link><pubDate>Fri, 27 Jan 2023 00:00:00 +0000</pubDate><guid>https://reorchestrate.com/posts/plugins-for-rust/</guid><description>Plugins are a useful way to allow advanced users to add new functions your software without having to modify the main program itself. With interpreted languages like JavaScript or Python this can be relatively easy as the runtime itself is able to execute arbitrary instructions without them having to be compiled first. Rust is a compiled lanaguage so does not have a method of executing abritrary instructions prior to compilation so adding functions generally requires rewriting them in Rust and redeploying the binary.</description></item></channel></rss>